[{"W:\\React.js projs\\file_manager\\src\\index.js":"1","W:\\React.js projs\\file_manager\\src\\BasePage.js":"2","W:\\React.js projs\\file_manager\\src\\Routes.js":"3","W:\\React.js projs\\file_manager\\src\\components\\Auth\\pages\\AuthPage.js":"4","W:\\React.js projs\\file_manager\\src\\App.js":"5","W:\\React.js projs\\file_manager\\src\\components\\Auth\\pages\\Registration.js":"6","W:\\React.js projs\\file_manager\\src\\redux\\actions\\auth.js":"7","W:\\React.js projs\\file_manager\\src\\axios-base.js":"8","W:\\React.js projs\\file_manager\\src\\redux\\store.js":"9","W:\\React.js projs\\file_manager\\src\\redux\\history.js":"10","W:\\React.js projs\\file_manager\\src\\redux\\rootReducer.js":"11","W:\\React.js projs\\file_manager\\src\\redux\\reducers\\auth.js":"12","W:\\React.js projs\\file_manager\\src\\components\\Auth\\pages\\Login.js":"13","W:\\React.js projs\\file_manager\\src\\containers\\MyFiles.js":"14","W:\\React.js projs\\file_manager\\src\\redux\\actions\\types.js":"15","W:\\React.js projs\\file_manager\\src\\redux\\actions\\files.js":"16","W:\\React.js projs\\file_manager\\src\\redux\\reducers\\files.js":"17","W:\\React.js projs\\file_manager\\src\\components\\FileItem\\FileItem.js":"18","W:\\React.js projs\\file_manager\\src\\Layout\\Layout.js":"19","W:\\React.js projs\\file_manager\\src\\components\\Header\\Header.js":"20","W:\\React.js projs\\file_manager\\src\\components\\GridItem\\GridItem.js":"21","W:\\React.js projs\\file_manager\\src\\reportWebVitals.js":"22","W:\\React.js projs\\file_manager\\src\\components\\Auth\\index.js":"23","W:\\React.js projs\\file_manager\\src\\components\\Auth\\pages\\Logout.js":"24"},{"size":500,"mtime":499162500000,"results":"25","hashOfConfig":"26"},{"size":582,"mtime":1606657393402,"results":"27","hashOfConfig":"26"},{"size":1224,"mtime":1606894647414,"results":"28","hashOfConfig":"26"},{"size":3381,"mtime":1606894033824,"results":"29","hashOfConfig":"26"},{"size":387,"mtime":1606894647414,"results":"30","hashOfConfig":"26"},{"size":5152,"mtime":1606650540788,"results":"31","hashOfConfig":"26"},{"size":2553,"mtime":1606839173067,"results":"32","hashOfConfig":"26"},{"size":144,"mtime":1606650540748,"results":"33","hashOfConfig":"26"},{"size":734,"mtime":1606629824827,"results":"34","hashOfConfig":"26"},{"size":91,"mtime":1606629438263,"results":"35","hashOfConfig":"26"},{"size":277,"mtime":1606711484411,"results":"36","hashOfConfig":"26"},{"size":1221,"mtime":1606629438279,"results":"37","hashOfConfig":"26"},{"size":3255,"mtime":1606708225439,"results":"38","hashOfConfig":"26"},{"size":8795,"mtime":1606891163092,"results":"39","hashOfConfig":"26"},{"size":563,"mtime":1606661551263,"results":"40","hashOfConfig":"26"},{"size":1478,"mtime":1606890362356,"results":"41","hashOfConfig":"26"},{"size":622,"mtime":1606736236046,"results":"42","hashOfConfig":"26"},{"size":3219,"mtime":1606897772512,"results":"43","hashOfConfig":"26"},{"size":370,"mtime":1606824765076,"results":"44","hashOfConfig":"26"},{"size":497,"mtime":1606839178041,"results":"45","hashOfConfig":"26"},{"size":1837,"mtime":1606841714818,"results":"46","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"26"},{"size":46,"mtime":1606894832267,"results":"48","hashOfConfig":"26"},{"size":460,"mtime":1606895013796,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"13uthoj",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"W:\\React.js projs\\file_manager\\src\\index.js",[],["103","104"],"W:\\React.js projs\\file_manager\\src\\BasePage.js",[],"W:\\React.js projs\\file_manager\\src\\Routes.js",["105"],"W:\\React.js projs\\file_manager\\src\\components\\Auth\\pages\\AuthPage.js",[],"W:\\React.js projs\\file_manager\\src\\App.js",[],"W:\\React.js projs\\file_manager\\src\\components\\Auth\\pages\\Registration.js",[],"W:\\React.js projs\\file_manager\\src\\redux\\actions\\auth.js",[],"W:\\React.js projs\\file_manager\\src\\axios-base.js",[],"W:\\React.js projs\\file_manager\\src\\redux\\store.js",[],["106","107"],"W:\\React.js projs\\file_manager\\src\\redux\\history.js",[],"W:\\React.js projs\\file_manager\\src\\redux\\rootReducer.js",[],"W:\\React.js projs\\file_manager\\src\\redux\\reducers\\auth.js",["108"],"W:\\React.js projs\\file_manager\\src\\components\\Auth\\pages\\Login.js",["109","110"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, loadUser } from \"../../../redux/actions/auth\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst initialValues = {\r\n  username: \"Monis\",\r\n  password: \"abcd\",\r\n};\r\n\r\nfunction Login(props) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const enableLoading = () => {\r\n    setLoading(true);\r\n  };\r\n\r\n  const disableLoading = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      enableLoading();\r\n      setTimeout(() => {\r\n        props\r\n          .login({ username: values.username, password: values.password })\r\n          .then(props.loadUser())\r\n          .catch(() => {\r\n            disableLoading();\r\n            setSubmitting(false);\r\n          });\r\n      }, 1000);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={classes.login_form} id=\"kt_login_signin_form\">\r\n      {/* begin::Head */}\r\n      <div className={classes.login_head}>\r\n        <h3>Sign In</h3>\r\n        <p>Enter your username and password</p>\r\n      </div>\r\n      {/* end::Head */}\r\n\r\n      {/*begin::Form*/}\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className={classes.form_group}>\r\n          <label>Username</label>\r\n          <input\r\n            placeholder=\"Username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            {...formik.getFieldProps(\"username\")}\r\n          />\r\n          {formik.touched.username && formik.errors.username ? (\r\n            <div className=\"fv-plugins-message-container\">\r\n              <div className=\"fv-help-block\">{formik.errors.username}</div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className={classes.form_group}>\r\n          <label>Password</label>\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            {...formik.getFieldProps(\"password\")}\r\n          />\r\n          {formik.touched.password && formik.errors.password ? (\r\n            <div className=\"fv-plugins-message-container\">\r\n              <div className=\"fv-help-block\">{formik.errors.password}</div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className={classes.submit_div}>\r\n          <button\r\n            id=\"kt_login_signin_submit\"\r\n            type=\"submit\"\r\n            disabled={formik.isSubmitting}\r\n            className={`btn btn-primary font-weight-bold px-9 py-4 my-3`}\r\n          >\r\n            <span>Sign In</span>\r\n            {loading && <span className=\"ml-3 spinner spinner-white\"></span>}\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {/*end::Form*/}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { login, loadUser })(Login);\r\n","W:\\React.js projs\\file_manager\\src\\containers\\MyFiles.js",["111"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFiles, addFile } from \"../redux/actions/files\";\r\nimport FileItem from \"../components/FileItem/FileItem\";\r\nimport classes from \"./MyFiles.module.css\";\r\nimport _ from \"lodash\";\r\nimport GridItem from \"../components/GridItem/GridItem\";\r\n\r\nclass MyFiles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: {},\r\n      newFolderName: \"\",\r\n      CWD: \"\",\r\n      newFileName: \"\",\r\n      newFile: false,\r\n      newFolder: false,\r\n      parentFolder: null,\r\n      listGridToggle: true,\r\n      navList: [\r\n        {\r\n          id: null,\r\n          name: \"root\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getFiles();\r\n    this.makeNavList();\r\n  }\r\n  onFileChange = (event) => {\r\n    this.setState({\r\n      selectedFile: event.target.files[0],\r\n    });\r\n  };\r\n  FileNameChange = (event) => {\r\n    this.setState({ newFileName: event.target.value });\r\n  };\r\n  onFolderChange = (event) => {\r\n    this.setState({ newFolderName: event.target.value });\r\n  };\r\n\r\n  uploadWithJSON() {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", this.state.selectedFile);\r\n    formData.append(\"user\", this.props.auth.user);\r\n    formData.append(\r\n      \"name\",\r\n      this.state.newFileName + \".\" + this.state.selectedFile.name.split(\".\")[1]\r\n    );\r\n    formData.append(\"folder\", false);\r\n    formData.append(\"parent_folder\", this.state.parentFolder);\r\n    this.props\r\n      .addFile(formData)\r\n      .then(this.props.getFiles())\r\n      .then(this.setState({ newFle: !this.state.newFile }));\r\n  }\r\n\r\n  uploadFolder() {\r\n    const formData = new FormData();\r\n    formData.append(\"user\", this.props.auth.user);\r\n    formData.append(\"name\", this.state.newFolderName);\r\n    formData.append(\"folder\", true);\r\n    formData.append(\"parent_folder\", this.state.parentFolder);\r\n    this.props\r\n      .addFile(formData)\r\n      .then(this.props.getFiles())\r\n      .then(this.setState({ newFolder: !this.state.newFolder }));\r\n  }\r\n  makeNavList = () => {\r\n    // const navList = [];\r\n    // let id, name;\r\n    // let parentId = this.state.parentFolder;\r\n    // console.log(parentId);\r\n    // while (parentId != null) {\r\n    //   id = this.props.files[parentId].id;\r\n    //   name = this.props.files[parentId].name;\r\n    //   console.log(name);\r\n    //   navList.append({ id, name });\r\n    //   parentId = this.props.files[parentId].parent_folder;\r\n    // }\r\n    // this.setState({ navList });\r\n  };\r\n  render() {\r\n    let fileList = null;\r\n    let gridList = null;\r\n    let grid = null;\r\n    let parentFolder = this.state.parentFolder;\r\n    const folderClick = (parentFolderId) => {\r\n      this.setState({ parentFolder: parentFolderId });\r\n      const navList = [];\r\n      let id, name;\r\n      let parentId = parentFolderId;\r\n      console.log(parentId);\r\n      while (parentId != null) {\r\n        id = this.props.files[parentId].id;\r\n        name = this.props.files[parentId].name;\r\n        console.log(name);\r\n        navList.push({ id, name });\r\n        parentId = this.props.files[parentId].parent_folder;\r\n      }\r\n      navList.push({\r\n        id: null,\r\n        name: \"root\",\r\n      });\r\n      this.setState({ navList });\r\n    };\r\n\r\n    if (this.props.files) {\r\n      let Files = _.pickBy(this.props.files, function (val, key, obj) {\r\n        return val.parent_folder === parentFolder;\r\n      });\r\n      Files = _.sortBy(Files, function (obj) {\r\n        return !obj.folder;\r\n      });\r\n      console.log(Files);\r\n      gridList = Files.map((file, index) => {\r\n        return <GridItem file={file} key={index} folderClick={folderClick} />;\r\n      });\r\n      fileList = Files.map((file, index) => {\r\n        return <FileItem file={file} key={index} folderClick={folderClick} />;\r\n      });\r\n    }\r\n\r\n    let fileUpload = null;\r\n    if (this.state.newFile) {\r\n      fileUpload = (\r\n        <div className={classes.headerRow}>\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.FileNameChange}\r\n            value={this.state.newFileName}\r\n            placeholder={\"Enter New File Name\"}\r\n          />\r\n          <input type=\"file\" onChange={this.onFileChange} />\r\n          <button\r\n            onClick={this.uploadWithJSON.bind(this)}\r\n            className={classes.btn}\r\n          >\r\n            Upload\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    let folderUpload = null;\r\n    if (this.state.newFolder) {\r\n      folderUpload = (\r\n        <div className={classes.headerRow}>\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.onFolderChange}\r\n            value={this.state.folderUpload}\r\n            placeholder=\"Enter New Folder Name\"\r\n            style={{ marginInline: \"0.5rem\" }}\r\n          />\r\n          <button\r\n            onClick={this.uploadFolder.bind(this)}\r\n            className={classes.btn}\r\n          >\r\n            Upload\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <div className={classes.subHeader}>\r\n          <h2\r\n            style={{\r\n              fontWeight: \"500 !important\",\r\n              color: \"#212121\",\r\n              marginLeft: \"0.5rem\",\r\n            }}\r\n          >\r\n            {this.state.navList[0].name}\r\n          </h2>\r\n          <div className={classes.navItem}>\r\n            {this.state.navList.map((dict) => {\r\n              return (\r\n                <p onClick={() => folderClick(dict.id)} key={dict.id}>\r\n                  - {dict.name} {\"  \"}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className={classes.btns_wrapper}>\r\n          <div className={classes.toggle_wrapper}>\r\n            <input\r\n              type=\"image\"\r\n              src=\"/image/list.png\"\r\n              alt=\"list Btn\"\r\n              // style={{ backgroundImage: 'url(\"/image/delete.png\")' }}\r\n              className={classes.toggle_btn}\r\n              onClick={() =>\r\n                this.setState({ listGridToggle: !this.state.listGridToggle })\r\n              }\r\n              disabled={this.state.listGridToggle}\r\n            />\r\n            <input\r\n              type=\"image\"\r\n              src=\"/image/grid.png\"\r\n              alt=\"grid Btn\"\r\n              // style={{ backgroundImage: 'url(\"/image/delete.png\")' }}\r\n              className={classes.toggle_btn}\r\n              onClick={() =>\r\n                this.setState({ listGridToggle: !this.state.listGridToggle })\r\n              }\r\n              disabled={!this.state.listGridToggle}\r\n            />\r\n          </div>\r\n          <div className={classes.btn_wrapper}>\r\n            <button\r\n              className={classes.btn}\r\n              onClick={() => {\r\n                this.setState({ newFolder: !this.state.newFolder });\r\n              }}\r\n            >\r\n              <div className={classes.btn_container}>\r\n                <img\r\n                  src=\"/image/new folder.png\"\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                  alt=\"New Folder\"\r\n                />\r\n              </div>\r\n              <span>New Folder</span>\r\n            </button>\r\n            <button\r\n              className={classes.btn}\r\n              onClick={() => {\r\n                this.setState({ newFile: !this.state.newFile });\r\n              }}\r\n            >\r\n              <div className={classes.btn_container}>\r\n                <img\r\n                  src=\"/image/new file.png\"\r\n                  width=\"30\"\r\n                  height=\"30\"\r\n                  alt=\"New File\"\r\n                />\r\n              </div>\r\n              <span>New File</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.state.listGridToggle ? (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"0.1rem\",\r\n            }}\r\n          >\r\n            <div className={classes.headerRow}>\r\n              <h4 className={classes.file_type_img}>Type</h4>\r\n              <h4 className={classes.file_name}>Name</h4>\r\n              <h4 className={classes.file_user}>User</h4>\r\n              <h4 className={classes.file_date}>Date</h4>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <div className={classes.myFiles}>\r\n          {folderUpload}\r\n          {fileUpload}\r\n          {this.state.listGridToggle ? (\r\n            fileList\r\n          ) : (\r\n            <div className={classes.gridWrapper}>{gridList}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  files: state.files,\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { getFiles, addFile })(MyFiles);\r\n","W:\\React.js projs\\file_manager\\src\\redux\\actions\\types.js",[],["112","113"],"W:\\React.js projs\\file_manager\\src\\redux\\actions\\files.js",[],"W:\\React.js projs\\file_manager\\src\\redux\\reducers\\files.js",[],"W:\\React.js projs\\file_manager\\src\\components\\FileItem\\FileItem.js",[],"W:\\React.js projs\\file_manager\\src\\Layout\\Layout.js",[],"W:\\React.js projs\\file_manager\\src\\components\\Header\\Header.js",[],"W:\\React.js projs\\file_manager\\src\\components\\GridItem\\GridItem.js",[],"W:\\React.js projs\\file_manager\\src\\reportWebVitals.js",[],"W:\\React.js projs\\file_manager\\src\\components\\Auth\\index.js",[],"W:\\React.js projs\\file_manager\\src\\components\\Auth\\pages\\Logout.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":2,"message":"119","line":27,"column":40,"nodeType":"120","messageId":"121","endLine":27,"endColumn":46},{"ruleId":"114","replacedBy":"122"},{"ruleId":"116","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":19,"column":1,"nodeType":"126","endLine":57,"endColumn":2},{"ruleId":"127","severity":1,"message":"128","line":2,"column":10,"nodeType":"120","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"130","line":24,"column":9,"nodeType":"120","messageId":"129","endLine":24,"endColumn":24},{"ruleId":"127","severity":1,"message":"131","line":89,"column":9,"nodeType":"120","messageId":"129","endLine":89,"endColumn":13},{"ruleId":"114","replacedBy":"132"},{"ruleId":"116","replacedBy":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-undef","'Logout' is not defined.","Identifier","undef",["134"],["135"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'Link' is defined but never used.","unusedVar","'getInputClasses' is assigned a value but never used.","'grid' is assigned a value but never used.",["134"],["135"],"no-global-assign","no-unsafe-negation"]